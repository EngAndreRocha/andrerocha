{"version":3,"sources":["images/claricia_thumbnail.jpg","containers/PageAndreRocha.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","PageAndreRocha","props","className","href","src","claricia_thumbnail","title","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,gD,sMC4F5BC,EA3EQ,SAAC,GAAY,EAAXC,MAErB,OACQ,kBAAC,WAAD,KACI,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,eACf,yBAAKA,UAAU,uBACf,yBAAKA,UAAU,cACf,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,UACX,4CACA,wMAEJ,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,gBACX,uBAAGC,KAAK,+BACJ,yBAAKD,UAAU,gBAAgBE,IAAKC,IAAoBC,MAAM,oIAUjDC,IAAI,0BAqC7B,yBAAKL,UAAU,UACX,gEACA,uBAAGA,UAAU,SAAb,uBACA,uBAAGA,UAAU,QAAb,yBCtEbM,MARf,WACE,OACE,yBAAKN,UAAU,OACb,kBAAC,EAAD,QCIcO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1c864ed3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/claricia_thumbnail.904bb9ba.jpg\";","import React, { Fragment } from 'react';\r\nimport './Page.css';\r\n\r\n\r\nimport claricia_thumbnail from '../images/claricia_thumbnail.jpg';\r\n\r\n/* import postgresql from '../images/postgresql.png';\r\nimport redis from '../images/redis.png';\r\nimport knex from '../images/knex.png';\r\nimport jwt from '../images/jwt.png';\r\nimport nodejs from '../images/nodejs.png';\r\nimport aws from '../images/aws.png';\r\nimport redux from '../images/redux.png';\r\nimport react from '../images/react.png';\r\nimport github from '../images/github.png'; */\r\n\r\n\r\nconst PageAndreRocha = ({props}) => {\r\n\r\n    return(\r\n            <Fragment>\r\n                <div className=\"above_the_fold\">\r\n                    <div className=\"background\"></div>\r\n                    <div className=\"background_overlay\"></div>\r\n                    <div className=\"signiture\"></div>\r\n                    <div className=\"rightscroller\">\r\n                        <div className=\"center\">\r\n                            <h1>Hello World!</h1>\r\n                            <span>My name is Andr√© from Portugal and I love to make websites! Relentless at problem solving, with a paisson to create new things and always open to new adventures. </span>\r\n                        </div>\r\n                        <div className=\"websites-wrapper\">\r\n                            <div className=\"websites-div\">\r\n                                <a href=\"http://clariciaeventus.com/\">\r\n                                    <img className=\"thumbnail_img\" src={claricia_thumbnail} title=\"Using\r\n                                    Postgresql, \r\n                                    Redis, \r\n                                    Nodejs, \r\n                                    AWS Services, \r\n                                    React-Redux, \r\n                                    Reactjs, \r\n                                    Github, \r\n                                    Knexjs, \r\n                                    JWT \r\n                                    and more...\" alt=\"claricia thumbnail\"></img>\r\n                                </a>\r\n                            </div>\r\n                            {/* <div className=\"using-div\">\r\n                                <h5>With this...</h5>\r\n                                <div className=\"icons_div\">\r\n                                    <a href=\"https://www.postgresql.org/\">\r\n                                        <img className=\"icon_image\" src={postgresql} alt=\"postgresql\"></img>\r\n                                    </a>\r\n                                    <a href=\"https://redis.io/\">\r\n                                        <img className=\"icon_image\" src={redis} alt=\"redis\"></img>\r\n                                    </a>\r\n                                    <a href=\"https://nodejs.org/en/\">\r\n                                        <img className=\"icon_image\" src={nodejs} alt=\"nodejs\" ></img>\r\n                                    </a>\r\n                                    <a href=\"https://aws.amazon.com/pt/\">\r\n                                        <img className=\"icon_image\" src={aws} alt=\"aws\"></img>\r\n                                    </a>\r\n                                    <a href=\"https://react-redux.js.org/\">\r\n                                        <img className=\"icon_image\" src={redux} alt=\"redux\"></img>\r\n                                    </a>\r\n                                    <a href=\"https://reactjs.org/\">\r\n                                        <img className=\"icon_image\" src={react} alt=\"react\"></img>\r\n                                    </a>\r\n                                    <a href=\"https://github.com/\">\r\n                                        <img className=\"icon_image\" src={github} alt=\"github\"></img>\r\n                                    </a>\r\n                                    <a href=\"http://knexjs.org/\">\r\n                                        <img className=\"icon_image\" src={knex} alt=\"knex\"></img>\r\n                                    </a>\r\n                                    <a href=\"https://jwt.io/\">\r\n                                        <img className=\"icon_image\" src={jwt} alt=\"jwt\" ></img>\r\n                                    </a>\r\n                                </div>\r\n                                <h5>...and some other tools.</h5>\r\n                            </div> */}\r\n                        </div>\r\n                        <div className=\"center\">\r\n                            <h1>Let's create something together!</h1>\r\n                            <p className=\"email\">rochandre@gmail.com</p>\r\n                            <p className=\"cell\">+351 925 112 378</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default PageAndreRocha;\r\n","import React from 'react';\r\n//import logo from '../logo.svg';\r\nimport './App.css';\r\nimport PageAndreRocha from './PageAndreRocha';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <PageAndreRocha />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}